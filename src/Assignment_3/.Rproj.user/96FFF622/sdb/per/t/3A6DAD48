{
    "contents" : "\nmatched_items <- read.csv(file = \"olx_mapped_titles.csv\", \n                          header = TRUE, sep = \",\")\n\n# 1. Getting unique ads within matched items\nmatched_items <- unique(matched_items)\n\n# 4. Getting Most Viewed and Top Ten Ads\nmost_viewed <- sort(matched_items$Views, decreasing = TRUE, \n                    na.last = TRUE)\nmost_viewed <- unique(most_viewed)\nprint(most_viewed[1:10])\n\n# 5. Getting mobile that was avialable for sale most\nhash <- function( keys ) {\n  result <- new.env( hash = TRUE, parent = emptyenv(), size = length( keys ) )\n  for( key in keys ) {\n    result[[ key ]] <- 0\n  }\n  return( result )\n}\nread_new_mobile_data <- read.csv(file = \"new_mobile_prices.csv\",\n                                 header = TRUE, sep = \",\")\nnew_mob_hash <- hash(read_new_mobile_data$Title)\npopulate_occurences(read_new_mobile_data$Title, new_mob_hash)\n\npopulate_occurences <- function (some_data, hash) {\n  for (key in some_data) {\n    hash[[key]] <- hash[[key]] + 1\n  }  \n  return (hash)\n}\n\nget_top_most <- function (some_data, hash) {\n  max = 0\n  most_available = \"\"\n  for (key in some_data) {\n    if (max < hash[[key]]) {\n      max = hash[[key]]\n      most_available = key\n    }\n  }\n  print(most_available)\n}\n\n# 5.  Getting Top Ten Mobiles\n\nget_top_ten <- function (some_data, hash) {\n  max = 0\n  for (key in some_data) {\n    if (max < hash[[key]]) {\n      max = hash[[key]]\n      most_available = key\n      cat(key, max, \"\")\n    }\n  }  \n}\n\n# 6. Getting user who has post most ads and Top Users\nunique_users <- unique(matched_items$Username)\nunique_users_hash <- hash(unique_users)\npopulate_occurences(matched_items$Username, unique_users_hash)\nprint (get_top_most(matched_items$Username, unique_users_hash))\nget_top_ten(matched_items$Username, unique_users_hash)\n\n# 7. Getting the City that included most ads and Ranking them\nunique_cities <- unique(matched_items$City)\nunique_cities_hash <- hash(unique_cities)\npopulate_occurences(matched_items$City, unique_cities_hash)\n\nprint(typeof(matched_items$New_Price[1]))\n# 8. Getting change in Prices [New-Original]\n\nfor (i in 1 : length(matched_items$Title)) {\n  \n    if ((matched_items$New_Price[i]) != 0) {\n      change_in_price <- as.numeric(gsub(\",\",\"\", matched_items$Old_Price[i])) - \n        as.numeric(gsub(\",\",\"\", matched_items$New_Price[i]))\n     }\n    else {\n      change_in_price <- NA\n    }\n  dfrm <- data.frame(New_Old = change_in_price)\n  if (i == 1) {\n  write.table(dfrm, file=\"change_in_price.csv\", sep = \",\",\n              row.names = FALSE, col.names = TRUE)\n  } else write.table(dfrm, file=\"change_in_price.csv\", append = TRUE, sep = \",\",\n                     row.names = FALSE, col.names = FALSE)\n}\n\n# 9. Finding percent change in Prices of all Items  \n#[formula: (Now - Original) / Original * 100]\n\nfor (i in 1 : length(matched_items$Title)) {\n  \n  if ((matched_items$New_Old[i]) != 0) {\n    percent_change_in_price <- (as.numeric(gsub(\",\",\"\", matched_items$New_Old[i])) / \n      (as.numeric(gsub(\",\",\"\", matched_items$New_Price[i])) * 100))\n  }\n  else {\n    percent_change_in_price <- 0\n  }\n  dfrm <- data.frame(Percent_Change_in_Price = percent_change_in_price)\n  if (i == 1) {\n    write.table(dfrm, file=\"change_in_price.csv\", sep = \",\",\n                row.names = FALSE, col.names = TRUE)\n  } else write.table(dfrm, file=\"change_in_price.csv\", append = TRUE, sep = \",\",\n                     row.names = FALSE, col.names = FALSE)\n}\n\n# 10. Finding Average %age of all Unique Items\nsum_of_all_percentile = 0\nfor (i in 1 : length(matched_items$Title)) {\n    sum_of_all_percentile =  sum_of_all_percentile +\n      as.numeric(gsub(\",\",\"\", matched_items$Percent_Change_in_Price[i]))\n}\nprint(sum_of_all_percentile / length(matched_items$Olx_Title))\n\n# 11. Sort items with respect to percent change in prices [lower to higher]\n\nsort_change_in_price <- sort(matched_items$Percent_Change_in_Price, \n                             decreasing = FALSE, na.last = TRUE)\ndfrm <- data.frame(Sort_wrt_Percent_Change_in_Price = sort_change_in_price)\nwrite.table(dfrm, file = \"change.csv\", sep = \",\", \n            row.names = FALSE, col.names = TRUE)\n\n# 12.  Finding some relationship between % change in price:\n# 1. ad views\n\nmax_views <- sort(matched_items$Views, decreasing = TRUE, na.last = TRUE)\n\nfor (i in 1 : length(matched_items$Olx_Title)) {\n    if (max_views[1] == matched_items$Percent_Change_in_Price[i]) {\n        cat(max_views[1], matched_items$Percent_Change_in_Price[i], \"\\n\")\n    }\n}\n# 12. Finding some relationship between % change in price:\n# 2. cities\n\nget_mean <- function (field, data) {\n  count = 0\n  sum = 0\n  for (i in 1 : length(matched_items$Olx_Title)) {\n    if (!is.na(data[i]) && \n        as.character(data[i]) == field) {\n      sum = sum + matched_items$Percent_Change_in_Price[i]\n      count = count + 1\n    }\n  }\n  print(count)\n  return (sum / count)\n}\nprint(get_mean(\"Islamabad\", matched_items$City))\nprint(get_mean(\"Lahore, Punjab\", matched_items$City))\nprint(get_mean(\"Karachi, Sindh\", matched_items$City))\n\n# 12. Finding some relationship between % change in price:\n# 3. brands\nprint(get_mean(\"Nokia\", matched_items$Brand))\nprint(get_mean(\"Samsung\", matched_items$Brand))\nprint(get_mean(\"Voice\", matched_items$Brand))\nprint(get_mean(\"Microsoft\", matched_items$Brand))\nprint(get_mean(\"Huawei\", matched_items$Brand))\nprint(get_mean(\"HTC\", matched_items$Brand))\nprint(get_mean(\"Qmobile\", matched_items$Brand))\nprint(get_mean(\"Rivo\", matched_items$Brand))\nprint(get_mean(\"Mobilink\", matched_items$Brand))\nprint(get_mean(\"GRight\", matched_items$Brand))\nprint(get_mean(\"Club\", matched_items$Brand))\nprint(get_mean(\"Oppo\", matched_items$Brand))\nprint(get_mean(\"Calme\", matched_items$Brand))\nprint(get_mean(\"Lenovo\", matched_items$Brand))\nprint(get_mean(\"OPhone\", matched_items$Brand))\nprint(get_mean(\"SonyEricsson\", matched_items$Brand))\nprint(get_mean(\"LG\", matched_items$Brand))\nprint(get_mean(\"Apple\", matched_items$Brand))\nprint(get_mean(\"BlackBerry\", matched_items$Brand))\nprint(get_mean(\"Haier\", matched_items$Brand))\nprint(get_mean(\"iNew\", matched_items$Brand))\nprint(get_mean(\"Motorola\", matched_items$Brand))\nprint(get_mean(\"GFive\", matched_items$Brand))\n\n# 12. Finding some relationship between % change in price:\n# 4. users\n\nprint(get_mean(\"Essa Hazoor\", matched_items$Username))\n\n# 13. Finding average percentage change prices of all unique brands \n\nprint(get_mean(\"Nokia\", matched_items$Brand))\nprint(get_mean(\"Samsung\", matched_items$Brand))\nprint(get_mean(\"Voice\", matched_items$Brand))\nprint(get_mean(\"Microsoft\", matched_items$Brand))\nprint(get_mean(\"Huawei\", matched_items$Brand))\nprint(get_mean(\"HTC\", matched_items$Brand))\nprint(get_mean(\"Qmobile\", matched_items$Brand))\nprint(get_mean(\"Rivo\", matched_items$Brand))\nprint(get_mean(\"Mobilink\", matched_items$Brand))\nprint(get_mean(\"GRight\", matched_items$Brand))\nprint(get_mean(\"Club\", matched_items$Brand))\nprint(get_mean(\"Oppo\", matched_items$Brand))\nprint(get_mean(\"Calme\", matched_items$Brand))\nprint(get_mean(\"Lenovo\", matched_items$Brand))\nprint(get_mean(\"OPhone\", matched_items$Brand))\nprint(get_mean(\"SonyEricsson\", matched_items$Brand))\nprint(get_mean(\"LG\", matched_items$Brand))\nprint(get_mean(\"Apple\", matched_items$Brand))\nprint(get_mean(\"BlackBerry\", matched_items$Brand))\nprint(get_mean(\"Haier\", matched_items$Brand))\nprint(get_mean(\"iNew\", matched_items$Brand))\nprint(get_mean(\"Motorola\", matched_items$Brand))\nprint(get_mean(\"GFive\", matched_items$Brand))\n\n# 15. Sorting brands with respect to percent change \n# in prices [lower to higher]\n\nbrand <- matched_items$Brand\nchange_in_price <- matched_items$Percent_Change_in_Price\n\nfor (i in 1 : length(matched_items$Olx_Title)) {\n  for (j in 2 : length(matched_items$Olx_Title)) {\n    if (change_in_price[i] <= change_in_price[j]) {\n      tmp = change_in_price[j]\n      change_in_price[j] = change_in_price[i]\n      change_in_price[i] = tmp\n      \n      tmp_b = as.character(brand[j])\n      brand[j] = as.character(brand[i])\n      brand[i] = tmp_b\n    }\n  }\n}\nprint(change_in_price)\nprint(brand)\ndfrm <- data.frame(Sorted_Brands = brand)\nwrite.table(dfrm, file = \"sorted_brands.csv\", sep = \",\", row.names = FALSE, col.names = TRUE)\n\n# 14. Finding some relationship between % change in price of brand: \n# 1. ad views\n\nget_views_sum <- function(brand) {\n  views = 0\n  for (i in 1 : length(matched_items$Olx_Title)) {\n    if (brand == as.character(matched_items$Brand[i])) {\n      if (is.na(matched_items$Views[i])) {\n        views = views + 0\n      } else {\n        views = views + matched_items$Views[i]\n      }\n    }\n  }\n  return (views)\n}\nprint(get_views_sum(\"Samsung\"))\n\n# 14. Finding some relationship between % change in price of brand: \n# 2. cities\n\nget_city_max_change_price_wrt_brand <- function(city, brand) {\n  max = 0.0\n  for (i in 1 : length(matched_items$Olx_Title)) {\n    if (!is.na(matched_items$City[i]) && city == as.character(matched_items$City[i])) {\n      if (brand == as.character(matched_items$Brand[i])) {\n        if (max < matched_items$Percent_Change_in_Price[i]) {\n          max = matched_items$Percent_Change_in_Price[i]\n        }\n      }\n    }\n  }\n  return (max)\n}\n\nprint(get_city_max_change_price_wrt_brand(city = \"Lahore, Punjab\", brand = \"Samsung\"))\nprint(get_city_max_change_price_wrt_brand(city = \"Islamabad\", brand = \"Samsung\"))\nprint(get_city_max_change_price_wrt_brand(city = \"Karachi, Sindh\", brand = \"Samsung\"))\n\n# 14. Finding some relationship between % change in price of brand:\n# 3. users\nget_user_brand_relation <- function (field, data) {\n  for (i in 1 : length(matched_items$Olx_Title)) {\n    if (!is.na(data[i]) && \n        as.character(data[i]) == field) {\n      if (matched_items$Percent_Change_in_Price[i] > 0) {\n        print(as.character(matched_items$Brand[i]))\n        print(matched_items$Percent_Change_in_Price[i])\n      }\n    }\n  }\n}\nget_user_brand_relation(\"Essa Hazoor\", matched_items$Username)\n\n# 16. If you want to buy a mobile/tablet today and possibly \n# will sell it exactly 1 year later. Which mobile/tablet\n# will you buy keeping in mind that you want to minimise the risk.\nmin = matched_items$Percent_Change_in_Price[1]\nmin_index = 0\nfor (i in 2 : length(matched_items$Olx_Title)) {\n  if (matched_items$Percent_Change_in_Price[i] > 0.0)\n    if (min >= matched_items$Percent_Change_in_Price[i]) {\n        min = matched_items$Percent_Change_in_Price[i]\n        min_index = i\n    }\n}\nsort(matched_items$New_Old, decreasing = TRUE, na.last = TRUE)\nprint(matched_items$Percent_Change_in_Price[min_index])\nprint(as.character(matched_items$Title[min_index]))\nprint(as.character(matched_items$Brand[min_index]))",
    "created" : 1452175315740.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "132|67|134|4|\n",
    "hash" : "2549965398",
    "id" : "3A6DAD48",
    "lastKnownWriteTime" : 1452518537,
    "path" : "C:/Users/Umair/Desktop/Assignment_3/analysis.R",
    "project_path" : "analysis.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}