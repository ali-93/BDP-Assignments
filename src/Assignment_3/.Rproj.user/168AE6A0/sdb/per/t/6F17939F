{
    "contents" : "\nmatched_items <- read.csv(file = \"olx_mapped_titles.csv\", \n                          header = TRUE, sep = \",\")\n\n# Getting unique ads within matched items\nmatched_items <- unique(matched_items)\n\n# Getting Most Viewed and Top Ten Ads\nmost_viewed <- sort(matched_items$Views, decreasing = TRUE, \n                    na.last = TRUE)\nmost_viewed <- unique(most_viewed)\nprint(most_viewed[1:10])\n\n# Getting mobile that was avialable for sale most\nhash <- function( keys ) {\n  result <- new.env( hash = TRUE, parent = emptyenv(), size = length( keys ) )\n  for( key in keys ) {\n    result[[ key ]] <- 0\n  }\n  return( result )\n}\nread_new_mobile_data <- read.csv(file = \"new_mobile_prices.csv\",\n                                 header = TRUE, sep = \",\")\nnew_mob_hash <- hash(read_new_mobile_data$Title)\npopulate_occurences(read_new_mobile_data$Title, new_mob_hash)\n\npopulate_occurences <- function (some_data, hash) {\n  for (key in some_data) {\n    hash[[key]] <- hash[[key]] + 1\n  }  \n  return (hash)\n}\n\nget_top_most <- function (some_data, hash) {\n  max = 0\n  most_available = \"\"\n  for (key in some_data) {\n    if (max < hash[[key]]) {\n      max = hash[[key]]\n      most_available = key\n    }\n  }\n  print(most_available)\n}\n\n# Getting Top Ten Mobiles\n\nget_top_ten <- function (some_data, hash) {\n  max = 0\n  for (key in some_data) {\n    if (max < hash[[key]]) {\n      max = hash[[key]]\n      most_available = key\n      cat(key, max, \"\")\n    }\n  }  \n}\n\n# Getting user who has post most ads and Top Users\nunique_users <- unique(matched_items$Username)\nunique_users_hash <- hash(unique_users)\npopulate_occurences(matched_items$Username, unique_users_hash)\nprint (get_top_most(matched_items$Username, unique_users_hash))\nget_top_ten(matched_items$Username, unique_users_hash)\n\n# Getting the City that included most ads and Ranking them\nunique_cities <- unique(matched_items$City)\nunique_cities_hash <- hash(unique_cities)\npopulate_occurences(matched_items$City, unique_cities_hash)\n\nprint(typeof(matched_items$New_Price[1]))\n# Getting change in Prices [New-Original]\n\nfor (i in 1 : length(matched_items$Title)) {\n  \n    if ((matched_items$New_Price[i]) != 0) {\n      change_in_price <- as.numeric(gsub(\",\",\"\", matched_items$Old_Price[i])) - \n        as.numeric(gsub(\",\",\"\", matched_items$New_Price[i]))\n     }\n    else {\n      change_in_price <- NA\n    }\n  dfrm <- data.frame(New_Old = change_in_price)\n  if (i == 1) {\n  write.table(dfrm, file=\"change_in_price.csv\", sep = \",\",\n              row.names = FALSE, col.names = TRUE)\n  } else write.table(dfrm, file=\"change_in_price.csv\", append = TRUE, sep = \",\",\n                     row.names = FALSE, col.names = FALSE)\n}\n\n# Finding percent change in Prices of all Items  \n#[formula: (Now - Original) / Original * 100]\n\nfor (i in 1 : length(matched_items$Title)) {\n  \n  if ((matched_items$New_Old[i]) != 0) {\n    percent_change_in_price <- (as.numeric(gsub(\",\",\"\", matched_items$New_Old[i])) / \n      (as.numeric(gsub(\",\",\"\", matched_items$New_Price[i])) * 100))\n  }\n  else {\n    percent_change_in_price <- 0\n  }\n  dfrm <- data.frame(Percent_Change_in_Price = percent_change_in_price)\n  if (i == 1) {\n    write.table(dfrm, file=\"change_in_price.csv\", sep = \",\",\n                row.names = FALSE, col.names = TRUE)\n  } else write.table(dfrm, file=\"change_in_price.csv\", append = TRUE, sep = \",\",\n                     row.names = FALSE, col.names = FALSE)\n}\n\n# Finding Average %age of all Unique Items\nsum_of_all_percentile = 0\nfor (i in 1 : length(matched_items$Title)) {\n    sum_of_all_percentile =  sum_of_all_percentile +\n      as.numeric(gsub(\",\",\"\", matched_items$Percent_Change_in_Price[i]))\n}\nprint(sum_of_all_percentile / length(matched_items$Olx_Title))\n\n# Sort items with respect to percent change in prices [lower to higher]\n\nsort_change_in_price <- sort(matched_items$Percent_Change_in_Price, \n                             decreasing = FALSE, na.last = TRUE)\ndfrm <- data.frame(Sort_wrt_Percent_Change_in_Price = sort_change_in_price)\nwrite.table(dfrm, file = \"change.csv\", sep = \",\", \n            row.names = FALSE, col.names = TRUE)\n\n# Finding some relationship between % change in price:\n# 1. ad views\n# 2. cities\n# 3. brands\n# 4. users\n\nmax = 0\nmax_views_percent = 0\nfor (i in 1 : length(matched_items$Olx_Title)) {\n    if (max < as.numeric(gsub(\",\",\"\", matched_items$Views[i]))) {\n        max = matched_items$Views[i]\n        max_views_percent = matched_items$Percent_Change_in_Price[i]\n    }     \n}\n\n\n\n\n\n",
    "created" : 1452365912218.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "139072581",
    "id" : "6F17939F",
    "lastKnownWriteTime" : 1452375171,
    "path" : "C:/Users/Ali/Desktop/Assignment_3/analysis.R",
    "project_path" : "analysis.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}